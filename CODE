import numpy as np
import pandas as pd
from sklearn.model_selection import train_test_split
from sklearn.linear_model import LinearRegression
from sklearn.metrics import mean_squared_error

np.random.seed(0)
n_samples = 100
square_footage = np.random.randint(500, 3500, n_samples)
num_bedrooms = np.random.randint(1, 6, n_samples)
num_bathrooms = np.random.randint(1, 4, n_samples)
prices = 50000 + (square_footage * 150) + (num_bedrooms * 10000) + (num_bathrooms * 5000) + np.random.randint(-20000, 20000, n_samples)

data = pd.DataFrame({
    'SquareFootage': square_footage,
    'NumBedrooms': num_bedrooms,
    'NumBathrooms': num_bathrooms,
    'Price': prices
})

X = data[['SquareFootage', 'NumBedrooms', 'NumBathrooms']]
y = data['Price']

X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=0)

model = LinearRegression()
model.fit(X_train, y_train)

y_pred = model.predict(X_test)
mse = mean_squared_error(y_test, y_pred)

print(f'Mean Squared Error: {mse}')
print(f'Coefficients: {model.coef_}')
print(f'Intercept: {model.intercept_}')
